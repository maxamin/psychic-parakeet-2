@model BatcoinMarket.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-12">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                <div class="col-md-8">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <p class="text-danger"><b>REMINDER: </b>Username = Password</p>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Username, new { @class = "form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>  
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <p class="text-warning">
                        <b>Accounts:</b>
                        <ul>
                            @foreach (var account in Model.Accounts)
                            {
                                <li>
                                    @account.Username - @account.Balance
                                    @Html.ActionLink("✘", "Delete", "Admin", new { username = account.Username }, null)
                                </li>
                            }
                        </ul>
                    </p>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}