<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_If>
   <attribute:startLine>
    <scalar:int>2</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:cond>
    <node:Expr_BinaryOp_Equal>
     <attribute:startLine>
      <scalar:int>2</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>2</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Scalar_LNumber>
       <attribute:startLine>
        <scalar:int>2</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>2</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:int>1</scalar:int>
       </subNode:value>
      </node:Scalar_LNumber>
     </subNode:left>
     <subNode:right>
      <node:Scalar_LNumber>
       <attribute:startLine>
        <scalar:int>2</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>2</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:int>1</scalar:int>
       </subNode:value>
      </node:Scalar_LNumber>
     </subNode:right>
    </node:Expr_BinaryOp_Equal>
   </subNode:cond>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Echo>
      <attribute:startLine>
       <scalar:int>4</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>4</scalar:int>
      </attribute:endLine>
      <subNode:exprs>
       <scalar:array>
        <node:Scalar_String>
         <attribute:startLine>
          <scalar:int>4</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>4</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <scalar:string>hello</scalar:string>
         </subNode:value>
        </node:Scalar_String>
       </scalar:array>
      </subNode:exprs>
     </node:Stmt_Echo>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <node:Stmt_Else>
     <attribute:startLine>
      <scalar:int>6</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:stmts>
      <scalar:array>
       <node:Stmt_If>
        <attribute:startLine>
         <scalar:int>6</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:cond>
         <node:Expr_BinaryOp_Equal>
          <attribute:startLine>
           <scalar:int>6</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>6</scalar:int>
          </attribute:endLine>
          <subNode:left>
           <node:Scalar_LNumber>
            <attribute:startLine>
             <scalar:int>6</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>6</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:int>2</scalar:int>
            </subNode:value>
           </node:Scalar_LNumber>
          </subNode:left>
          <subNode:right>
           <node:Scalar_LNumber>
            <attribute:startLine>
             <scalar:int>6</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>6</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:int>2</scalar:int>
            </subNode:value>
           </node:Scalar_LNumber>
          </subNode:right>
         </node:Expr_BinaryOp_Equal>
        </subNode:cond>
        <subNode:stmts>
         <scalar:array>
          <node:Stmt_Echo>
           <attribute:startLine>
            <scalar:int>8</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>8</scalar:int>
           </attribute:endLine>
           <subNode:exprs>
            <scalar:array>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>8</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>8</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>world</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </scalar:array>
           </subNode:exprs>
          </node:Stmt_Echo>
         </scalar:array>
        </subNode:stmts>
        <subNode:elseifs>
         <scalar:array/>
        </subNode:elseifs>
        <subNode:else>
         <node:Stmt_Else>
          <attribute:startLine>
           <scalar:int>10</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>13</scalar:int>
          </attribute:endLine>
          <subNode:stmts>
           <scalar:array>
            <node:Stmt_Echo>
             <attribute:startLine>
              <scalar:int>12</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>12</scalar:int>
             </attribute:endLine>
             <subNode:exprs>
              <scalar:array>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>12</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>12</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>bob</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </scalar:array>
             </subNode:exprs>
            </node:Stmt_Echo>
           </scalar:array>
          </subNode:stmts>
         </node:Stmt_Else>
        </subNode:else>
       </node:Stmt_If>
      </scalar:array>
     </subNode:stmts>
    </node:Stmt_Else>
   </subNode:else>
  </node:Stmt_If>
  <node:Expr_Print>
   <attribute:startLine>
    <scalar:int>14</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>14</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Scalar_String>
     <attribute:startLine>
      <scalar:int>14</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>14</scalar:int>
     </attribute:endLine>
     <subNode:value>
      <scalar:string>poasd</scalar:string>
     </subNode:value>
    </node:Scalar_String>
   </subNode:expr>
  </node:Expr_Print>
  <node:Stmt_While>
   <attribute:startLine>
    <scalar:int>15</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>18</scalar:int>
   </attribute:endLine>
   <subNode:cond>
    <node:Expr_ConstFetch>
     <attribute:startLine>
      <scalar:int>15</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>15</scalar:int>
     </attribute:endLine>
     <subNode:name>
      <node:Name>
       <attribute:startLine>
        <scalar:int>15</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>15</scalar:int>
       </attribute:endLine>
       <subNode:parts>
        <scalar:array>
         <scalar:string>false</scalar:string>
        </scalar:array>
       </subNode:parts>
      </node:Name>
     </subNode:name>
    </node:Expr_ConstFetch>
   </subNode:cond>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Echo>
      <attribute:startLine>
       <scalar:int>17</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>17</scalar:int>
      </attribute:endLine>
      <subNode:exprs>
       <scalar:array>
        <node:Scalar_String>
         <attribute:startLine>
          <scalar:int>17</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>17</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <scalar:string>snap</scalar:string>
         </subNode:value>
        </node:Scalar_String>
       </scalar:array>
      </subNode:exprs>
     </node:Stmt_Echo>
    </scalar:array>
   </subNode:stmts>
  </node:Stmt_While>
 </scalar:array>
</AST>
