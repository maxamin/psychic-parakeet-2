// Copyright 2022 Dynatrace LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Portions of this code, as identified in remarks, are provided under the
// Creative Commons BY-SA 4.0 or the MIT license, and are provided without
// any warranty. In each of the remarks, we have provided attribution to the
// original creators and other attribution parties, along with the title of
// the code (if known) a copyright notice and a link to the license, and a
// statement indicating whether or not we have modified the code.

import {
  Box,
  Button,
  Card,
  CardContent,
  Stack,
  Typography,
} from "@mui/material";
import { ExploitInfo } from "@components/Overview";
import Tag from "@components/Tag";
import { getShortHostname } from "@utils/UrlUtils";

interface ExploitCardProps {
  exploit: ExploitInfo;
  startFunction: Function;
  addFilter: Function;
}

/*
 * Shows name, description, and tags for one exploit.
 * This card is visible on the overview page.
 * Also allows to start exploits from here.
 */
const ExploitCard = ({
  exploit,
  startFunction,
  addFilter,
}: ExploitCardProps) => {
  return (
    <Box>
      <Card sx={{ height: "420px" }} className="relative">
        <CardContent>
          <Stack
            direction="row"
            className="mb-2"
            gap={0.5}
            sx={{ flexWrap: "wrap" }}
          >
            {exploit.tags.map((tag, idx) => {
              return <Tag key={idx} tag={tag} addFilter={addFilter}></Tag>;
            })}
          </Stack>
          <Typography gutterBottom variant="h5" component="div">
            {exploit.name}
          </Typography>
          <Typography
            gutterBottom
            component="div"
            className="overflow-auto h-40"
          >
            {exploit.desc}
          </Typography>
        </CardContent>

        <Box className="mt-auto w-full absolute bottom-0">
          <Box className="ml-3 w-full">
            <Typography>Links: </Typography>
            <Box className="max-h-52, overflow-auto">
              {exploit.links.map((link, idx) => {
                return (
                  <Button key={idx} href={link} target="_blank">
                    {getShortHostname(link)}
                  </Button>
                );
              })}
            </Box>
            <Button
              size="small"
              onClick={() => startFunction(exploit.id)}
              className="ml-auto mt-auto mb-3 mr-6 float-right"
              variant="contained"
            >
              Start
            </Button>
          </Box>
        </Box>
      </Card>
    </Box>
  );
};

export default ExploitCard;
