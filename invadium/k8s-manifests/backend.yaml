apiVersion: v1
kind: Service
metadata:
  name: invadium-backend
  namespace: invadium
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: invadium
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: invadium
  ports:
    - port: 3001
      targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: invadium-backend
  namespace: invadium
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: invadium
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: invadium
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: invadium
    spec:
      serviceAccountName: invadium-backend-sa
      containers:
        - name: invadium
          image: invadium-backend
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 500m
          readinessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 5
            httpGet:
              path: /api
              port: 3001
          envFrom:
            - configMapRef:
                name: invadium-config
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: invadium-pvc
