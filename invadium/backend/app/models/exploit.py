# Copyright 2022 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Portions of this code, as identified in remarks, are provided under the
# Creative Commons BY-SA 4.0 or the MIT license, and are provided without
# any warranty. In each of the remarks, we have provided attribution to the
# original creators and other attribution parties, along with the title of
# the code (if known) a copyright notice and a link to the license, and a
# statement indicating whether or not we have modified the code.

from app.models.environment_var import EnvironmentVar
from app.models.step import Step
from pydantic import BaseModel


class ExploitInfo(BaseModel):
    id: str
    name: str
    desc: str
    image: str
    tags: list[str] = []
    links: list[str] = []


class Exploit(ExploitInfo):
    def __init__(self, **data):
        # map env to dict
        env_dict = {}
        if "env" in data:
            for i in data["env"]:
                exploit_env = EnvironmentVar(**i)
                env_dict[exploit_env.name] = exploit_env

        data["env"] = env_dict

        # map steps to dict
        for i in data["steps"]:
            s = data["steps"][i]
            step = Step(
                id=i,
                name=s["name"],
                desc=s["desc"],
                commands=s["commands"],
                env=[],
            )
            if "env" in s:
                for e in s["env"]:
                    env_var = EnvironmentVar(**e)
                    step.env[env_var.name] = env_var

            data["steps"][step.id] = step

        super().__init__(**data)

    env: dict[str, EnvironmentVar]
    steps: dict[str, Step]
