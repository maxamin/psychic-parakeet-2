<!--Copyright © 2014 Alexander Isakov. Contact:<alexander.isakov@tuhh.de>
    Copyright © 2014 Marina Krotofil. Contact:<marina.krotofil@tuhh.de>
    Copyright © 2014 TUHH-SVA Security in Distributed Applications.
    All rights reserved.
    License: http://opensource.org/licenses/BSD-3-Clause
-->
    
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:model="clr-namespace:shared.Model"
                    xmlns:common="clr-namespace:shared.Common"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <common:AttackToStringConverter x:Key="AttackToStringConverter" />
    <common:AttackModeToStringConverter x:Key="AttackModeToStringConverter" />
    <common:BooleanOrConverter x:Key="BooleanOrConverter" />
    <common:ControllerTypeToStringConverter x:Key="ControllerTypeToStringConverter" />
    <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <common:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />

    <Color x:Key="LightBackgroundColor">#595959</Color>
    <SolidColorBrush x:Key="LightBackgroundBrush" Color="{StaticResource LightBackgroundColor}"/>

    <ObjectDataProvider x:Key="AttackType" MethodName="GetStringValues" ObjectType="{x:Type common:EnumExtensions}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:Attack" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="AttackStrings" MethodName="GetNames" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:Attack" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="AttackModeStrings" MethodName="GetNames" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:AttackMode" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="ControllerTypeStrings" MethodName="GetNames" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:ControllerTypes" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    
    <ControlTemplate x:Key="ErrorTemplate">
        <StackPanel Orientation="Horizontal">
            <Border BorderThickness="1" BorderBrush="#FFdc000c"
                    CornerRadius="3"
                    VerticalAlignment="Top">
                <Grid>
                    <Polygon x:Name="toolTipCorner"
                         Grid.ZIndex="2"
                         Margin="-1"
                         Points="10,10 10,0 0,0" 
                         Fill="#FFdc000c" 
                         HorizontalAlignment="Right" 
                         VerticalAlignment="Top"
                         IsHitTestVisible="True"/>
                    <!--<Polyline Grid.ZIndex="3"
                          Points="9,9 0,0" Margin="-1" HorizontalAlignment="Right" 
                          StrokeThickness="1.5"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round"
                          Stroke="White"
                          VerticalAlignment="Top"
                          IsHitTestVisible="True"/>-->
                    <AdornedElementPlaceholder x:Name="adorner"/>
                </Grid>
            </Border>
            <Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
                Opacity="0" CornerRadius="1.5"
                IsHitTestVisible="False"
                MinHeight="24" MaxWidth="267">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2.25" 
                                  Color="Black" 
                                  Opacity="0.4"
                                  Direction="315"
                                  BlurRadius="4"/>
                </Border.Effect>
                <TextBlock Text="{Binding ElementName=adorner,
                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                        <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                        <Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SimpleErrorTemplate">
            <Border BorderThickness="1" BorderBrush="#FFdc000c"
                    CornerRadius="3"
                    VerticalAlignment="Top">
                    <AdornedElementPlaceholder x:Name="adorner"/>
            </Border>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type model:Controller}">
        <Border Background="{StaticResource LightBackgroundBrush}"
                CornerRadius="7"
                Margin="5, 5, 0, 0"
                Padding="5">
            <StackPanel >
                <TextBlock Text="{Binding Name}"
                           TextAlignment="Left"
                           TextDecorations="Underline"
                           Padding="10,0"
                           FontSize="15"/>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" HorizontalAlignment="Right">
                    <Label Content="Attack type:"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource AttackStrings}}"
                              SelectedItem="{Binding Attack, Converter={StaticResource AttackToStringConverter}}"
                              Width="120"
                              Margin="2" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" HorizontalAlignment="Right">
                    <Label Content="Attack mode:"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource AttackModeStrings}}"
                              SelectedItem="{Binding Mode, Converter={StaticResource AttackModeToStringConverter}}"
                              Width="120"
                              Margin="2" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" HorizontalAlignment="Right">
                    <Label Content="Integrity attack value:"/>
                    <TextBox Text="{Binding IntegrityAttackValue,
                                            Mode=TwoWay,
                                            ValidatesOnDataErrors=True}"
                             Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
                             Width="120"
                             Margin="2"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" HorizontalAlignment="Right">
                    <Label Content="Start:"/>
                    <TextBox Text="{Binding Start,
                                            Mode=TwoWay,
                                            ValidatesOnDataErrors=True}"
                             Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
                             Width="90"
                             Margin="2"/>
                    <Button Content="rand"
                            Command="{Binding RandomCommand}"
                            CommandParameter="start"
                            Margin="2"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" HorizontalAlignment="Right">
                    <Label Content="Duration:"/>
                    <TextBox Text="{Binding Duration,
                                            Mode=TwoWay,
                                            ValidatesOnDataErrors=True}"
                             Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
                             Width="90"
                             Margin="2"/>
                    <Button Content="rand"
                            Command="{Binding RandomCommand}"
                            CommandParameter="duration"
                            Margin="2"/>
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

</ResourceDictionary>